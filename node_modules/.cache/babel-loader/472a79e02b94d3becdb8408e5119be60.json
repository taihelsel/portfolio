{"ast":null,"code":"import _classCallCheck from \"/home/tai/Desktop/dev/anesthesia/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tai/Desktop/dev/anesthesia/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/tai/Desktop/dev/anesthesia/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tai/Desktop/dev/anesthesia/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/tai/Desktop/dev/anesthesia/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/tai/Desktop/dev/anesthesia/src/components/PopupModal/PopupModal.js\";\nimport React, { Component } from 'react';\nimport './PopupModal.css';\n\nvar PopupModal =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PopupModal, _Component);\n\n  function PopupModal() {\n    var _this;\n\n    _classCallCheck(this, PopupModal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PopupModal).call(this));\n\n    _this.setAsActiveExplorer = function () {\n      try {\n        document.getElementsByClassName(\"selected-explorer\")[0].classList.remove(\"selected-explorer\");\n      } catch (_unused) {}\n\n      document.getElementById(\"popup-modal\" + _this.props.popupModalKey).classList.add(\"selected-explorer\");\n    };\n\n    _this.handleMouseUp = function (e) {\n      _this.firstMoveOffset = null;\n      document.removeEventListener('mousemove', _this.moveExplorer);\n    };\n\n    _this.handleMouseDown = function (e) {\n      document.addEventListener('mousemove', _this.moveExplorer);\n    };\n\n    _this.moveExplorer = function (e) {\n      var explorerEl = document.getElementById(\"popup-modal\" + _this.props.popupModalKey);\n      var explorerElStyle = getComputedStyle(explorerEl);\n      var currentStyle = {\n        x: parseFloat(explorerElStyle.getPropertyValue(\"left\")),\n        y: parseFloat(explorerElStyle.getPropertyValue(\"top\")),\n        width: parseFloat(explorerElStyle.getPropertyValue(\"width\")),\n        height: parseFloat(explorerElStyle.getPropertyValue(\"height\"))\n      };\n      if (_this.firstMoveOffset === null) _this.firstMoveOffset = e.pageX - currentStyle.x;\n      var newX = e.pageX - _this.firstMoveOffset;\n      var newY = e.pageY;\n\n      if (newX > 0 && currentStyle.width + newX < window.innerWidth) {\n        explorerEl.style.left = newX + \"px\";\n      }\n\n      if (newY > 0 && currentStyle.height + newY < window.innerHeight) {\n        explorerEl.style.top = newY + \"px\";\n      }\n    };\n\n    _this.handleExplorerClose = function (e) {\n      _this.props.handleClose(e, _this.props.popupModalKey);\n    };\n\n    _this.state = {};\n    _this.firstMoveOffset = null;\n    return _this;\n  }\n\n  _createClass(PopupModal, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setAsActiveExplorer();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        id: \"popup-modal\" + this.props.popupModalKey,\n        className: \"popup-modal explorer\",\n        onMouseDown: this.setAsActiveExplorer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"popup-modal-head explorer-head\",\n        onMouseDown: this.handleMouseDown,\n        onMouseUp: this.handleMouseUp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"explorer-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, this.props.name), React.createElement(\"ul\", {\n        className: \"explorer-controls\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        onClick: this.handleExplorerMin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"-\"), React.createElement(\"li\", {\n        onClick: this.handleExplorerMax,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"+\"), React.createElement(\"li\", {\n        onClick: this.handleExplorerClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"x\"))), React.createElement(\"div\", {\n        className: \"popup-modal-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"popup-modal-question\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, this.props.question), React.createElement(\"ul\", {\n        className: \"popup-modal-options\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, this.props.options.map(function (i) {\n        return React.createElement(\"li\", {\n          onClick: _this2.handleOptionClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, i);\n      }))));\n    }\n  }]);\n\n  return PopupModal;\n}(Component);\n\nexport default PopupModal;","map":{"version":3,"sources":["/home/tai/Desktop/dev/anesthesia/src/components/PopupModal/PopupModal.js"],"names":["React","Component","PopupModal","setAsActiveExplorer","document","getElementsByClassName","classList","remove","getElementById","props","popupModalKey","add","handleMouseUp","e","firstMoveOffset","removeEventListener","moveExplorer","handleMouseDown","addEventListener","explorerEl","explorerElStyle","getComputedStyle","currentStyle","x","parseFloat","getPropertyValue","y","width","height","pageX","newX","newY","pageY","window","innerWidth","style","left","innerHeight","top","handleExplorerClose","handleClose","state","name","handleExplorerMin","handleExplorerMax","question","options","map","i","handleOptionClick"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './PopupModal.css';\n\nclass PopupModal extends Component {\n    constructor(){\n        super();\n        this.state = {};\n        this.firstMoveOffset = null;\n    }\n    componentDidMount() {\n        this.setAsActiveExplorer();\n    }\n    setAsActiveExplorer = () => {\n        try {\n            document.getElementsByClassName(\"selected-explorer\")[0].classList.remove(\"selected-explorer\");\n        } catch{ }\n        document.getElementById(\"popup-modal\" + this.props.popupModalKey).classList.add(\"selected-explorer\");\n    }\n    handleMouseUp = (e) => {\n        this.firstMoveOffset = null;\n        document.removeEventListener('mousemove', this.moveExplorer);\n    }\n    handleMouseDown = (e) => {\n        document.addEventListener('mousemove', this.moveExplorer);\n    }\n    moveExplorer = (e) => {\n        let explorerEl = document.getElementById(\"popup-modal\" + this.props.popupModalKey);\n        let explorerElStyle = getComputedStyle(explorerEl);\n        let currentStyle = {\n            x: parseFloat(explorerElStyle.getPropertyValue(\"left\")),\n            y: parseFloat(explorerElStyle.getPropertyValue(\"top\")),\n            width: parseFloat(explorerElStyle.getPropertyValue(\"width\")),\n            height: parseFloat(explorerElStyle.getPropertyValue(\"height\")),\n        }\n        if (this.firstMoveOffset === null) this.firstMoveOffset = e.pageX - currentStyle.x;\n        let newX = e.pageX - this.firstMoveOffset;\n        let newY = e.pageY;\n        if (newX > 0 && currentStyle.width + newX < window.innerWidth) {\n            explorerEl.style.left = newX + \"px\";\n        }\n        if (newY > 0 && currentStyle.height + newY < window.innerHeight) {\n            explorerEl.style.top = newY + \"px\";\n        }\n    }\n    handleExplorerClose = (e) => {\n        this.props.handleClose(e, this.props.popupModalKey);\n    }\n    render() {\n        return (\n            <div id={\"popup-modal\" + this.props.popupModalKey} className=\"popup-modal explorer\" onMouseDown={this.setAsActiveExplorer} >\n                <div className=\"popup-modal-head explorer-head\" onMouseDown={this.handleMouseDown} onMouseUp={this.handleMouseUp}>\n                    <h3 className=\"explorer-title\">{this.props.name}</h3>\n                    <ul className=\"explorer-controls\">\n                        <li onClick={this.handleExplorerMin}>-</li>\n                        <li onClick={this.handleExplorerMax}>+</li>\n                        <li onClick={this.handleExplorerClose}>x</li>\n                    </ul>\n                </div>\n                <div className=\"popup-modal-body\">\n                    <h1 className=\"popup-modal-question\">{this.props.question}</h1>\n                    <ul className=\"popup-modal-options\">\n                        {this.props.options.map(i=><li onClick={this.handleOptionClick}>{i}</li>)}\n                    </ul>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default PopupModal;\n"]},"metadata":{},"sourceType":"module"}